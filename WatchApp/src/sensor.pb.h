/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Tue Mar 19 19:18:41 2019. */

#ifndef PB_SENSOR_PB_H_INCLUDED
#define PB_SENSOR_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SensorMessage {
    int32_t sensor_type;
    pb_size_t data_count;
    float data[3];
    int64_t timestamp;
/* @@protoc_insertion_point(struct:SensorMessage) */
} SensorMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SensorMessage_init_default               {0, 0, {0, 0, 0}, 0}
#define SensorMessage_init_zero                  {0, 0, {0, 0, 0}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorMessage_sensor_type_tag            1
#define SensorMessage_data_tag                   2
#define SensorMessage_timestamp_tag              3

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define SensorMessage_size                       37

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSOR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
